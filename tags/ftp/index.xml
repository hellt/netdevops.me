<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>FTP - Tag - NetDevOps</title><link>https://netdevops.me/tags/ftp/</link><description>FTP - Tag - NetDevOps</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 23 Nov 2018 12:00:00 +0000</lastBuildDate><atom:link href="https://netdevops.me/tags/ftp/" rel="self" type="application/rss+xml"/><item><title>Saturating the network with FTP</title><link>https://netdevops.me/2018/saturating-the-network-with-ftp/</link><pubDate>Fri, 23 Nov 2018 12:00:00 +0000</pubDate><author>Author</author><guid>https://netdevops.me/2018/saturating-the-network-with-ftp/</guid><description><![CDATA[<p>While working on the Ipanema Wan Opt VNF integration with <a href="http://www.nuagenetworks.net/enterprise/software-defined-wan/" target="_blank" rel="noopener noreffer">Nuage Networks</a> I stumbled upon an interesting case which required to max out the network with FTP traffic. The tricky point there was to create the FTP connection which won&rsquo;t be limited by the disk IO performance. Especially, considering that the disks were kind of slow in the setup I had.</p>
<p>It turns out, you can use the in-memory devices in the FTP communication path <code>/dev/zero -&gt; /dev/null</code>, ruling out the slowliness that could have been added by the disks. Lets figure out how to do that!</p>]]></description></item></channel></rss>