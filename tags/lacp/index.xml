<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>lacp - Tag - NetDevOps</title><link>https://netdevops.me/tags/lacp/</link><description>lacp - Tag - NetDevOps</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 20 Feb 2021 06:00:00 +0000</lastBuildDate><atom:link href="https://netdevops.me/tags/lacp/" rel="self" type="application/rss+xml"/><item><title>Transparently redirecting packets/frames between interfaces</title><link>https://netdevops.me/2021/transparently-redirecting-packets/frames-between-interfaces/</link><pubDate>Sat, 20 Feb 2021 06:00:00 +0000</pubDate><author>Author</author><guid>https://netdevops.me/2021/transparently-redirecting-packets/frames-between-interfaces/</guid><description>Lately I have been consumed by an idea of running container-based labs that span containerized NOSes, classical VM-based routers and regular containers with a single and uniform UX.
Luckily the foundation was already there. With plajjan/vrnetlab you get a toolchain that cleverly packages qemu-based VMs inside the container packaging, and with networkop/docker-topo you can run, deploy and wire containers in meshed topologies.
One particular thing though we needed to address, and it was the way we interconnect containers which host vrnetlab-created routers inside.</description></item></channel></rss>