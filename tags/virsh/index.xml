<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>virsh - Tag - NetDevOps</title><link>https://netdevops.me/tags/virsh/</link><description>virsh - Tag - NetDevOps</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 26 Oct 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://netdevops.me/tags/virsh/" rel="self" type="application/rss+xml"/><item><title>Changing Libvirt bridge attachment in a running domain aka on-the-fly</title><link>https://netdevops.me/2017/changing-libvirt-bridge-attachment-in-a-running-domain-aka-on-the-fly/</link><pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate><author>Author</author><guid>https://netdevops.me/2017/changing-libvirt-bridge-attachment-in-a-running-domain-aka-on-the-fly/</guid><description><![CDATA[<p>At work I always prefer KVM hosts for reasons such as <em>flexible, free and GUI-less</em>. Yet I never bothered to go deeper into the networking features of Libvirt, so I only connect VMs to the host networks via Linux Bridges or OvS. Far far away from fancy virtual libvirt networks.</p>
<p>Even with this simple networking approach I recently faced a tedious task of reconnecting VMs to different bridges <em>on-the-fly</em>.<br>
My use case came from a need to connect a single traffic generator VM to the different access ports of virtual CPEs. Essentially this meant that I need to reconnect my traffic generator interfaces to different bridges back and forth:</p>
<p align=center>

</p>
<p>Apparently there is no such <code>virsh</code> command that will allow you to change bridge attachments for networking devices, so a bit of bash-ing came just handy.</p>]]></description></item><item><title>Destroy and Undefine KVM VMs in a single run</title><link>https://netdevops.me/2017/destroy-and-undefine-kvm-vms-in-a-single-run/</link><pubDate>Tue, 18 Jul 2017 12:00:00 +0000</pubDate><author>Author</author><guid>https://netdevops.me/2017/destroy-and-undefine-kvm-vms-in-a-single-run/</guid><description><![CDATA[<p><code>virsh</code> is a goto console utility for managing Qemu/KVM virtual machines. But when it comes to deletion of the VMs you better keep calm - there is no single command to destroy the VM, its definition XML file and disk image.</p>
<p>Probably not a big problem if you have a long-living VMs, but if you in a testing environment it is naturally to spawn and kill VMs quite often. Lets see how <code>xargs</code> can help us with that routine.</p>]]></description></item></channel></rss>