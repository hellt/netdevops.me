<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Serverless - Tag - NetDevOps</title><link>https://netdevops.me/tags/serverless/</link><description>Serverless - Tag - NetDevOps</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 30 Jun 2019 06:00:00 +0000</lastBuildDate><atom:link href="https://netdevops.me/tags/serverless/" rel="self" type="application/rss+xml"/><item><title>Creating Google Cloud Platform Function with Python and Serverless</title><link>https://netdevops.me/2019/creating-google-cloud-platform-function-with-python-and-serverless/</link><pubDate>Sun, 30 Jun 2019 06:00:00 +0000</pubDate><author>Author</author><guid>https://netdevops.me/2019/creating-google-cloud-platform-function-with-python-and-serverless/</guid><description>&lt;p>Two years ago &lt;a href="/2017/building-aws-lambda-with-python-s3-and-serverless/" rel="">I shared&lt;/a> my experience on building the AWS Lambda function for a python project of my own. And a few days ago I stumbled upon a nice opensource CLI tool that I immediately wanted to transform in a web service.&lt;/p></description></item><item><title>Building AWS Lambda with Python, S3 and serverless</title><link>https://netdevops.me/2017/building-aws-lambda-with-python-s3-and-serverless/</link><pubDate>Mon, 24 Jul 2017 06:00:00 +0000</pubDate><author>Author</author><guid>https://netdevops.me/2017/building-aws-lambda-with-python-s3-and-serverless/</guid><description><![CDATA[<p>Cloud-native revolution pointed out the fact that the microservice is the new building block and your best friends now are Containers, AWS, GCE, Openshift, Kubernetes, you-name-it. But suddenly <em>micro</em> became not that granular enough and people started talking about <em>serverless functions</em>!
<a target="_blank" href="https://lh3.googleusercontent.com/iNjG1IpPyFKkXIsJThti5hs7_Ytc7GGpf4rCUCw5-f0dF31BYWbyyW3In1Fh4PvTKyh8xamSMKxMeFx6unzqao4ouLPxueLpx8RGD5Fg4SM2Kp_plaryC7zuUsRmAZ8-W9mHwzyuQQmC11-FH-yF5ef1FPsh0xglVv4IcSRDSPUO0BuqNZF0Vd5LpvgRGOvmE0xeqFoK-uUlM0KXRIFQusIcscq-Vv6SVKMBahoOpkhorTFCPD1tAIo4a6-q7diwWJj6TPWMnhMfg85s-NSz_0MR7bTIWw_PRN3HM66sfe8X3a7lmEuc1KxJ1ZF20qS6b9rW90Pa2iw6mHk_b_IjBBQBYeRScTgXd7IZpRQlO5-28RKvSvSJTxoSiCLBIuCgYebgp5hF62w_3Rmd9ajV3fEi_BMT04vd5gft5Mzad0NIA-sDboETXHM-n0UBnvvToAzENmfTl6pC9dXfaXlAvVqDRwDWmXjD5EGnIhLH-6lLSzswlNgqpZYDqd20p0cz_0-8xxmdXrdp7WyHCO4NMkpgZa6zvPpJipPRIaTImqr-GhaceBEHWzFF27aNQ6bx6FNXHj4IhfnM1VyuDqTU33-De-kft_IUF27g6XNKA41ytnNvstOSTqwEFA=w638-h359-no" title="Brian Christner, Docker &amp; Serverless: https://www.slideshare.net/BrianChristner/docker-serverless" >
        
    </a></p>
<p>When I decided to step in the serverless property I chose <a href="https://docs.aws.amazon.com/lambda/latest/dg/welcome.html" target="_blank" rel="noopener noreffer">AWS Lambda</a> as my instrument of choice. As for experimental subject, I picked up one of my existing projects - a script that tracks new documentation releases for Nokia IP/SDN products (which I aggregate at <a href="https://nokdoc.github.io" target="_blank" rel="noopener noreffer">nokdoc.github.io</a>).</p>
<p>Given that not so many posts are going deeper than onboarding a simplest function, I decided to write down the key pieces I needed to uncover to push a <strong>real code</strong> to the Lambda.</p>
<p>Buckle up, our agenda is fascinating:</p>
<ul>
<li>testing basic Lambda onboarding process powered by Serverless framework</li>
<li>accessing files in AWS S3 from within our Lambda with <code>boto3</code> package and custom AWS IAM role</li>
<li>packaging non-standard python modules for our Lambda</li>
<li>exploring ways to provision shared code for Lambdas</li>
<li>and using path variables to branch out the code in Lambda</li>
</ul>]]></description></item></channel></rss>